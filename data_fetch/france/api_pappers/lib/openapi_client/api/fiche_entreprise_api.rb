=begin
#Pappers API

#L'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d'API dans les requêtes, en utilisant le paramètre `api_token`.  L'URL d'accès à l'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V1 : https://www.pappers.fr/api/documentation/v1  L'historique des modifications (changelog) est accessible à l'url suivante : https://www.pappers.fr/api/changelog 

The version of the OpenAPI document: 2.7.0
Contact: support@pappers.fr
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.4.0

=end

require 'cgi'

module OpenapiClient
  class FicheEntrepriseApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Récupère l'ensemble des informations disponibles sur une entreprise.
    # Vous devez fournir soit le SIREN, soit le SIRET. Si vous indiquez le SIREN, tous les établissements associés à ce SIREN seront renvoyés dans la clé `etablissements`. Si vous indiquez le SIRET, seul l'établissement associé sera renvoyé dans la clé `etablissement`.
    # @param api_token [String] Clé d&#39;utilisation de l&#39;API
    # @param [Hash] opts the optional parameters
    # @option opts [String] :siren SIREN de l&#39;entreprise
    # @option opts [String] :siret SIRET de l&#39;entreprise
    # @option opts [String] :format_publications_bodacc Format attendu pour les publications BODACC. Valeur par défaut : &#x60;\&quot;objet\&quot;&#x60;.
    # @option opts [Boolean] :marques Si vrai, le retour inclura les marques éventuelles de l&#39;entreprise. Valeur par défaut : &#x60;false&#x60;.
    # @option opts [Boolean] :validite_tva_intracommunautaire Si vrai, le champ validite_tva_intracommunautaire du retour indiquera si le numéro de tva est valide auprès de la Commission européenne. Valeur par défaut : &#x60;false&#x60;.
    # @option opts [Boolean] :publications_bodacc_brutes Pappers traite les publications BODACC afin de supprimer les publications périmée. Si vrai, le retour inclura les publications bodacc sans traitement. Valeur par défaut : &#x60;false&#x60;.
    # @return [EntrepriseFiche]
    def entreprise(api_token, opts = {})
      data, _status_code, _headers = entreprise_with_http_info(api_token, opts)
      data
    end

    # Récupère l&#39;ensemble des informations disponibles sur une entreprise.
    # Vous devez fournir soit le SIREN, soit le SIRET. Si vous indiquez le SIREN, tous les établissements associés à ce SIREN seront renvoyés dans la clé &#x60;etablissements&#x60;. Si vous indiquez le SIRET, seul l&#39;établissement associé sera renvoyé dans la clé &#x60;etablissement&#x60;.
    # @param api_token [String] Clé d&#39;utilisation de l&#39;API
    # @param [Hash] opts the optional parameters
    # @option opts [String] :siren SIREN de l&#39;entreprise
    # @option opts [String] :siret SIRET de l&#39;entreprise
    # @option opts [String] :format_publications_bodacc Format attendu pour les publications BODACC. Valeur par défaut : &#x60;\&quot;objet\&quot;&#x60;.
    # @option opts [Boolean] :marques Si vrai, le retour inclura les marques éventuelles de l&#39;entreprise. Valeur par défaut : &#x60;false&#x60;.
    # @option opts [Boolean] :validite_tva_intracommunautaire Si vrai, le champ validite_tva_intracommunautaire du retour indiquera si le numéro de tva est valide auprès de la Commission européenne. Valeur par défaut : &#x60;false&#x60;.
    # @option opts [Boolean] :publications_bodacc_brutes Pappers traite les publications BODACC afin de supprimer les publications périmée. Si vrai, le retour inclura les publications bodacc sans traitement. Valeur par défaut : &#x60;false&#x60;.
    # @return [Array<(EntrepriseFiche, Integer, Hash)>] EntrepriseFiche data, response status code and response headers
    def entreprise_with_http_info(api_token, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FicheEntrepriseApi.entreprise ...'
      end
      # verify the required parameter 'api_token' is set
      if @api_client.config.client_side_validation && api_token.nil?
        fail ArgumentError, "Missing the required parameter 'api_token' when calling FicheEntrepriseApi.entreprise"
      end
      allowable_values = ["objet", "texte"]
      if @api_client.config.client_side_validation && opts[:'format_publications_bodacc'] && !allowable_values.include?(opts[:'format_publications_bodacc'])
        fail ArgumentError, "invalid value for \"format_publications_bodacc\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = '/entreprise'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'api_token'] = api_token
      query_params[:'siren'] = opts[:'siren'] if !opts[:'siren'].nil?
      query_params[:'siret'] = opts[:'siret'] if !opts[:'siret'].nil?
      query_params[:'format_publications_bodacc'] = opts[:'format_publications_bodacc'] if !opts[:'format_publications_bodacc'].nil?
      query_params[:'marques'] = opts[:'marques'] if !opts[:'marques'].nil?
      query_params[:'validite_tva_intracommunautaire'] = opts[:'validite_tva_intracommunautaire'] if !opts[:'validite_tva_intracommunautaire'].nil?
      query_params[:'publications_bodacc_brutes'] = opts[:'publications_bodacc_brutes'] if !opts[:'publications_bodacc_brutes'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'EntrepriseFiche'

      # auth_names
      auth_names = opts[:debug_auth_names] || []

      new_options = opts.merge(
        :operation => :"FicheEntrepriseApi.entreprise",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FicheEntrepriseApi#entreprise\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
