/**
 * Pappers API
 * L\'API de Pappers vous permet de récupérer des informations et documents sur les entreprises françaises à partir de leur numéro SIREN ou SIRET.  Vous devez indiquer votre clé d\'API dans les requêtes, en utilisant le paramètre `api_token`.  L\'URL d\'accès à l\'API est https://api.pappers.fr/v2/  Lien vers la documentation de la V1 : https://www.pappers.fr/api/documentation/v1  L\'historique des modifications (changelog) est accessible à l\'url suivante : https://www.pappers.fr/api/changelog 
 *
 * The version of the OpenAPI document: 2.7.0
 * Contact: support@pappers.fr
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ComptesAnnuels200ResponseValueInnerSectionsInner } from './comptesAnnuels200ResponseValueInnerSectionsInner';
import { Ratios } from './ratios';

/**
* Année
*/
export class ComptesAnnuels200ResponseValueInner {
    /**
    * Date de dépôt des comptes, au format AAAA-MM-JJ.
    */
    'dateDepot'?: string;
    /**
    * Code du greffe de dépôt des comptes.
    */
    'codeGreffe'?: string;
    /**
    * Numéro de dépôt des comptes au greffe.
    */
    'numeroDepot'?: string;
    /**
    * Numéro de gestion au greffe.
    */
    'numeroGestion'?: string;
    /**
    * Date de cloture des comptes, au format AAAA-MM-JJ.
    */
    'dateCloture'?: string;
    /**
    * Date de cloture des comptes n-1, lorsque présents, au format AAAA-MM-JJ.
    */
    'dateClotureN1'?: string;
    /**
    * Durée de l\'exercice déposé, en mois.
    */
    'dureeExerciceN'?: number;
    /**
    * Durée de l\'exercice précédent, lorsque présent, en mois.
    */
    'dureeExerciceN1'?: number;
    /**
    * Type de comptes (C = complets ; S = simplifiés ; K = consolidés ; CS = mélange complets/simplifiés ; B = banques ; A = assurances).
    */
    'typeComptes'?: ComptesAnnuels200ResponseValueInner.TypeComptesEnum;
    /**
    * Libellé du type de comptes.
    */
    'libelleTypeComptes'?: ComptesAnnuels200ResponseValueInner.LibelleTypeComptesEnum;
    /**
    * Devise des comptes.
    */
    'devise'?: string;
    /**
    * Devise d\'origine en cas de conversion.
    */
    'deviseOrigine'?: string;
    /**
    * Confidentialité totale des comptes.
    */
    'confidentialite'?: boolean;
    /**
    * Confidentialité partielle des comptes (seul le compte de résultat est confidentiel, le reste des comptes sont disponibles).
    */
    'confidentialiteCompteDeResultat'?: boolean;
    /**
    * Description du type de saisie des comptes.
    */
    'typeSaisie'?: string;
    /**
    * Informations complémentaires sur le traitement des comptes.
    */
    'informationsTraitement'?: Array<string>;
    /**
    * Liste des sections de liasses fiscales.
    */
    'sections'?: Array<ComptesAnnuels200ResponseValueInnerSectionsInner>;
    'ratios'?: Ratios;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "dateDepot",
            "baseName": "date_depot",
            "type": "string"
        },
        {
            "name": "codeGreffe",
            "baseName": "code_greffe",
            "type": "string"
        },
        {
            "name": "numeroDepot",
            "baseName": "numero_depot",
            "type": "string"
        },
        {
            "name": "numeroGestion",
            "baseName": "numero_gestion",
            "type": "string"
        },
        {
            "name": "dateCloture",
            "baseName": "date_cloture",
            "type": "string"
        },
        {
            "name": "dateClotureN1",
            "baseName": "date_cloture_n-1",
            "type": "string"
        },
        {
            "name": "dureeExerciceN",
            "baseName": "duree_exercice_n",
            "type": "number"
        },
        {
            "name": "dureeExerciceN1",
            "baseName": "duree_exercice_n-1",
            "type": "number"
        },
        {
            "name": "typeComptes",
            "baseName": "type_comptes",
            "type": "ComptesAnnuels200ResponseValueInner.TypeComptesEnum"
        },
        {
            "name": "libelleTypeComptes",
            "baseName": "libelle_type_comptes",
            "type": "ComptesAnnuels200ResponseValueInner.LibelleTypeComptesEnum"
        },
        {
            "name": "devise",
            "baseName": "devise",
            "type": "string"
        },
        {
            "name": "deviseOrigine",
            "baseName": "devise_origine",
            "type": "string"
        },
        {
            "name": "confidentialite",
            "baseName": "confidentialite",
            "type": "boolean"
        },
        {
            "name": "confidentialiteCompteDeResultat",
            "baseName": "confidentialite_compte_de_resultat",
            "type": "boolean"
        },
        {
            "name": "typeSaisie",
            "baseName": "type_saisie",
            "type": "string"
        },
        {
            "name": "informationsTraitement",
            "baseName": "informations_traitement",
            "type": "Array<string>"
        },
        {
            "name": "sections",
            "baseName": "sections",
            "type": "Array<ComptesAnnuels200ResponseValueInnerSectionsInner>"
        },
        {
            "name": "ratios",
            "baseName": "ratios",
            "type": "Ratios"
        }    ];

    static getAttributeTypeMap() {
        return ComptesAnnuels200ResponseValueInner.attributeTypeMap;
    }
}

export namespace ComptesAnnuels200ResponseValueInner {
    export enum TypeComptesEnum {
        C = <any> 'C',
        S = <any> 'S',
        K = <any> 'K',
        Cs = <any> 'CS',
        B = <any> 'B',
        A = <any> 'A'
    }
    export enum LibelleTypeComptesEnum {
        Complets = <any> 'Complets',
        Simplifis = <any> 'Simplifiés',
        Consolids = <any> 'Consolidés',
        CompletsSimplifis = <any> 'Complets/Simplifiés',
        Banques = <any> 'Banques',
        Assurances = <any> 'Assurances'
    }
}
